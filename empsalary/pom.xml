<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.10</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.employeemnmt</groupId>
	<artifactId>empsalary</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>empsalary</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	
	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		

<!--	starter dependency required for spring bean validation using spring boot -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        
        
        
<!-- 	dependency for embedded tomcat server for spring mvc in spring boot. It is
 		required for the application to be executed as a Java application though the 
 		packaging is WAR  -->
		<dependency>
    		<groupId>org.apache.tomcat.embed</groupId>
    		<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>

	
<!-- 	dependency for deploying the WAR file in external tomcat server, the scope is 'provided' in order to avoid
		confusion from the embedded spring boot tomcat server, by the spring framework. The scope 'provided' means that
		the server is available only when the WAR packaging as mentioned in pom.xml is going to be deployed
		in external tomcat server, but not provided (not available) when the same WAR packaging application is executed
		as a Java Application (at that time, the spring boot embedded tomcat server is used for deployment) -->	
		<dependency>
   			<groupId>org.springframework.boot</groupId>
   			<artifactId>spring-boot-starter-tomcat</artifactId>
   			<scope>provided</scope>
		</dependency>
				

<!--	dependency for JSTL like <%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>	-->
		
<!-- 	dependency for JSTL like <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>  -->
		<dependency>
    		<groupId>jakarta.servlet.jsp.jstl</groupId>
    		<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
		</dependency>
		
		

<!-- 	dependency required for spring bean validation using annotations of
		jakarta.validation.constraints -->		
		<dependency>
    		<groupId>org.hibernate.validator</groupId>
    		<artifactId>hibernate-validator</artifactId>
		</dependency>



<!-- 	dependency required for spring bean validation using annotations of
		javax.validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>		
		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<image>
						<builder>paketobuildpacks/builder-jammy-base:latest</builder>
					</image>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
